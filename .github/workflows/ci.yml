name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/install-action@cargo-binstall

      - name: Install Dependencies
        run: |
          rustup component add rustfmt llvm-tools-preview clippy
          cargo binstall -y --no-symlinks cargo-llvm-cov cargo-nextest cargo-sort cargo-audit cargo-machete
          wget https://github.com/mozilla/sccache/releases/download/v0.7.5/sccache-v0.7.5-x86_64-unknown-linux-musl.tar.gz
          mkdir sccache-install && tar -xzf sccache-v0.7.5-x86_64-unknown-linux-musl.tar.gz -C sccache-install --strip-components=1
          mv sccache-install/sccache /usr/local/bin && rm -rf sccache-install/

      - name: Configure sccache
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('RUSTC_WRAPPER', 'sccache')
            core.exportVariable('SCCACHE_GHA_ENABLED', 'on')
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Run quick check
        run: |
          cargo audit
          cargo fmt --all -- --check
          cargo sort --check
          cargo machete

      - name: Sccache clear
        run: sccache --zero-stats > /dev/null
      
      - name: Build in release mode
        run: cargo build --release --all-features --features fastrace/enable

      - name: Test with codecov
        run: cargo llvm-cov --no-report nextest --all-features --features fastrace/enable

      - name: Test example with codecov
        run: |
          cargo llvm-cov --no-report run --example proxy
          cargo llvm-cov --no-report run --example controller
          cargo llvm-cov --no-report run --example tracing --features fastrace/enable

      - name: Test bench with codecov
        run: |
          cargo llvm-cov --no-report --bench micro --all-features

      - name: Generate codecov report
        run: |
          cargo llvm-cov report --lcov --output-path lcov.info

      - name: Sccache state
        run: sccache --show-stats

      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          verbose: true
